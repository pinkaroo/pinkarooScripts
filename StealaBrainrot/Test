local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local LocalPlayer = Players.LocalPlayer

local StealRemote = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Net"):WaitForChild("RE/22f715d7-f287-4bbf-96d5-fb14e461dd75")

local Plots = workspace:WaitForChild("Plots", 9e9)

local PlotController = require(ReplicatedStorage.Controllers.PlotController)

local PlayerBase = PlotController.GetMyPlot().PlotModel

local ConvertToNumber = function(str)
    local NumStr = str:gsub("%$", ""):gsub("/s", "")

    local Multiplier = 1
    if NumStr:find("K") then
        Multiplier = 1e3
    elseif NumStr:find("M") then
        Multiplier = 1e6
    elseif NumStr:find("B") then
        Multiplier = 1e9
    elseif NumStr:find("T") then
        Multiplier = 1e12
    end

    NumStr = NumStr:gsub("[KMBT]", "")

    local Number = tonumber(NumStr)
    if Number then
        return Number * Multiplier
    end

    return 0
end

local GetBestBrainrots = function()
    local BestBrainrots = {}

    for _, v in pairs(Plots:GetDescendants()) do
        if not v:IsDescendantOf(PlayerBase) and v.Name == "Generation" and v:IsA("TextLabel") and v.Parent:IsA("BillboardGui") then
            local Amount = ConvertToNumber(v.Text)

            table.insert(BestBrainrots, {
                Name = v.Parent.DisplayName.Text,
                Spawn = v.Parent.Parent.Parent,
                Label = v,
                Actor = v.Parent.Parent.Parent.Parent.Parent.Parent.Parent:FindFirstChild(v.Parent.DisplayName.Text),
                Amount = Amount,
                RealAmount = v.Text
            })
        end
    end

    table.sort(BestBrainrots, function(a, b)
        return a.Amount > b.Amount
    end)

    return BestBrainrots
end

local BestBrainrot = GetBestBrainrots()[1]

if BestBrainrot and BestBrainrot.Actor then
    if sethiddenproperty then
        sethiddenproperty(LocalPlayer, "MaximumSimulationRadius", math.huge)
        sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
    end

    StealRemote:FireServer(workspace:GetServerTimeNow()+62, "b3505eaa-0def-479d-9f39-489ac03fa81e") -- Start "Holding" NEEDS 1.5 MINIMUM
    
    local StealPrompt
    for i,v in pairs(BestBrainrot.Spawn.PromptAttachment:GetChildren()) do
        if v:IsA("ProximityPrompt") and v.ActionText == "Steal" then
            StealPrompt = v
            break
        end
    end
    
    local Tool = LocalPlayer.Backpack:FindFirstChild("Quantum Cloner") or LocalPlayer.Character:FindFirstChild("Quantum Cloner")
    
    if not Tool then
        warn("No tool bro")
        return
    end
    
    if workspace:FindFirstChild(LocalPlayer.UserId .. "_Clone") then
        workspace:FindFirstChild(LocalPlayer.UserId .. "_Clone"):Destroy()
    end
    
    LocalPlayer.Character.Humanoid:EquipTool(Tool)
    
    wait() -- Slow wait    
    
    ReplicatedStorage.Packages.Net["RE/UseItem"]:FireServer()
    
    local Clone = workspace:FindFirstChild(LocalPlayer.UserId .. "_Clone")
    
    while not Clone do
        ReplicatedStorage.Packages.Net["RE/UseItem"]:FireServer()
        task.wait()
        
        Clone = workspace:FindFirstChild(LocalPlayer.UserId .. "_Clone")
    end
    
    wait(.5)
    
    Clone:PivotTo(BestBrainrot.Spawn.CFrame)
    
    wait(.5)
    
    ReplicatedStorage.Packages.Net["RE/QuantumCloner/OnTeleport"]:FireServer()
    
    local ClonePos = Clone.HumanoidRootPart.Position
    
    local Start = tick()
    
    while (LocalPlayer.Character.HumanoidRootPart.Position - ClonePos).Magnitude > 15 and tick() - Start < 2 do
        Clone:PivotTo(BestBrainrot.Spawn.CFrame)
        task.wait()
    end
    
    if tick() - Start > 2 then
        return warn("Failed to TP")
    end
    wait(.2)
    fireproximityprompt(StealPrompt)
end
